{"version":3,"sources":["webpack:///src/app/tab1/tab1.page.html","webpack:///src/app/groceries-service.service.ts","webpack:///src/app/input-dialog-service.service.ts","webpack:///src/app/tab1/tab1-routing.module.ts","webpack:///src/app/tab1/tab1.module.ts","webpack:///src/app/tab1/tab1.page.scss","webpack:///src/app/tab1/tab1.page.ts"],"names":["GroceriesServiceService","items","index","splice","item","name","quantity","push","providedIn","InputDialogServiceService","alertController","dataService","slidingItem","create","cssClass","header","inputs","placeholder","value","buttons","text","role","handler","console","log","undefined","editItem","close","addItem","alert","present","routes","path","component","Tab1PageRoutingModule","imports","forChild","exports","Tab1PageModule","declarations","Tab1Page","toastController","inputDialogService","title","getItems","message","duration","toast","removeItem","showPrompt","selector","template"],"mappings":"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","file":"tab1-tab1-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      {{title}}\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\" padding>\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">{{title}}</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <!--only shows if list is empty-->\\n  <ion-item class=\\\"ion-text-center\\\" *ngIf=\\\"loadItems().length == 0\\\">\\n     <ion-label>List is empty.</ion-label>\\n  </ion-item>\\n\\n  <!-- List of Sliding Items \\n  #slidingItem is to enable ability to close slider in ts files-->\\n  <ion-list>\\n    <ion-item-sliding #slidingItem *ngFor=\\\"let item of loadItems(); let i = index\\\">\\n      <ion-item>\\n        <ion-label>{{item.name}}</ion-label>\\n        <p>{{item.quantity}}</p>\\n      </ion-item>\\n      <ion-item-options>\\n\\n        <ion-button (click)=\\\"editItem(item, i, slidingItem)\\\" ion-button color=\\\"primary\\\" icon-start>\\n          <ion-icon name=\\\"create\\\"></ion-icon>\\n        </ion-button>\\n\\n        <ion-button (click)=\\\"removeItem(item, i)\\\" ion-button color=\\\"danger\\\" icon-start>\\n          <ion-icon name=\\\"trash\\\"></ion-icon>\\n        </ion-button>\\n\\n>      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-list>\\n\\n  <!-- fab placed to the bottom end -->\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button (click)=\\\"addItem()\\\" >\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n\\n</ion-content>\\n\";","/**\n * This service is for the data of the Groceries app\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroceriesServiceService {\n\n  items = [];\n\n  constructor() { }\n\n  getItems() {\n    return this.items;\n  }\n\n  removeItem(index) {\n    this.items.splice(index, 1);\n  }\n\n  editItem(item, index) {\n    this.items[index].name = item.name;\n    this.items[index].quantity = item.quantity;\n  }\n\n  addItem(item){\n    this.items.push(item);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n/**\n * This service if for the add and edit dialog boxes of the grocery app\n */\n\nimport { AlertController } from '@ionic/angular';\nimport { GroceriesServiceService } from './groceries-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InputDialogServiceService {\n\n  constructor(public alertController: AlertController, public dataService: GroceriesServiceService) { }\n\n  /* the ? next to inputs makes them optional */\n  async showPrompt(item?, index?, slidingItem?) {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: item ? 'Edit Item' : 'Add Item',\n      inputs: [\n        {\n          name: 'name',\n          placeholder: \"Name\",\n          value: item ? item.name : null\n        },\n        {\n          name : 'quantity',\n          placeholder: \"Quantity\",\n          value: item ? item.quantity : null\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Save',\n          handler: (item) => {\n            console.log('Confirm Save', item);\n            if (index !== undefined) {\n              this.dataService.editItem(item, index);\n              /* item doesn't slide back when finished without this line*/\n              slidingItem.close();\n            }\n            else {\n              this.dataService.addItem(item);\n            }\n            \n            \n          }\n        }\n      ]\n    });\n\n    await alert.present();\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab1Page } from './tab1.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab1Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab1PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { Tab1PageRoutingModule } from './tab1-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    Tab1PageRoutingModule\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjEvdGFiMS5wYWdlLnNjc3MifQ== */\";","import { Component } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { GroceriesServiceService } from '../groceries-service.service';\nimport { InputDialogServiceService } from '../input-dialog-service.service';\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\nexport class Tab1Page {\n\n  title = \"Grocery App\"\n\n\n  constructor(public toastController: ToastController, public alertController: AlertController, public dataService: GroceriesServiceService, public inputDialogService: InputDialogServiceService) {\n\n  }\n\n  loadItems() {\n    return this.dataService.getItems();\n  }\n\n  async removeItem(item, index) {\n    console.log(\"Removing Item = \", item, index);\n    const toast = await this.toastController.create({\n      message: 'Removing ' + item.name + '...',\n      duration: 2000\n    });\n    toast.present();\n\n    this.dataService.removeItem(index);\n  }\n\n  /*slidingItem included to enable the item to slide back when done, name commes from HTML*/\n  async editItem(item, index, slidingItem) {\n    console.log(\"Edit Item = \", item, index);\n    const toast = await this.toastController.create({\n      message: 'Editing ' + item.name + '...',\n      duration: 2000\n    });\n    toast.present();\n\n    console.log(\"Editing Item\");\n    this.inputDialogService.showPrompt(item, index, slidingItem);\n\n  }\n  \n\n  async addItem() {\n    console.log(\"Adding Item\");\n    this.inputDialogService.showPrompt();\n  }\n\n  \n\n}\n"]}