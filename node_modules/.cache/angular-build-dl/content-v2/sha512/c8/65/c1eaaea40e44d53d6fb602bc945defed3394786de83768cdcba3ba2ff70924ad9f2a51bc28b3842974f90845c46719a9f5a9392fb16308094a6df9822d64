{"version":3,"sources":["./src/app/tab1/tab1.page.html","./src/app/groceries-service.service.ts","./src/app/input-dialog-service.service.ts","./src/app/tab1/tab1-routing.module.ts","./src/app/tab1/tab1.module.ts","./src/app/tab1/tab1.page.scss","./src/app/tab1/tab1.page.ts"],"names":[],"mappings":"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","file":"tab1-tab1-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      {{title}}\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\" padding>\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">{{title}}</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <!--only shows if list is empty-->\\n  <ion-item class=\\\"ion-text-center\\\" *ngIf=\\\"loadItems().length == 0\\\">\\n     <ion-label>List is empty.</ion-label>\\n  </ion-item>\\n\\n  <!-- List of Sliding Items \\n  #slidingItem is to enable ability to close slider in ts files-->\\n  <ion-list>\\n    <ion-item-sliding #slidingItem *ngFor=\\\"let item of loadItems(); let i = index\\\">\\n      <ion-item>\\n        <ion-label>{{item.name}}</ion-label>\\n        <p>{{item.quantity}}</p>\\n      </ion-item>\\n      <ion-item-options>\\n\\n        <ion-button (click)=\\\"editItem(item, i, slidingItem)\\\" ion-button color=\\\"primary\\\" icon-start>\\n          <ion-icon name=\\\"create\\\"></ion-icon>\\n        </ion-button>\\n\\n        <ion-button (click)=\\\"removeItem(item, i)\\\" ion-button color=\\\"danger\\\" icon-start>\\n          <ion-icon name=\\\"trash\\\"></ion-icon>\\n        </ion-button>\\n\\n>      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-list>\\n\\n  <!-- fab placed to the bottom end -->\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button (click)=\\\"addItem()\\\" >\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n\\n</ion-content>\\n\";","/**\n * This service is for the data of the Groceries app\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroceriesServiceService {\n\n  items = [];\n\n  constructor() { }\n\n  getItems() {\n    return this.items;\n  }\n\n  removeItem(index) {\n    this.items.splice(index, 1);\n  }\n\n  editItem(item, index) {\n    this.items[index].name = item.name;\n    this.items[index].quantity = item.quantity;\n  }\n\n  addItem(item){\n    this.items.push(item);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n/**\n * This service if for the add and edit dialog boxes of the grocery app\n */\n\nimport { AlertController } from '@ionic/angular';\nimport { GroceriesServiceService } from './groceries-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InputDialogServiceService {\n\n  constructor(public alertController: AlertController, public dataService: GroceriesServiceService) { }\n\n  /* the ? next to inputs makes them optional */\n  async showPrompt(item?, index?, slidingItem?) {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: item ? 'Edit Item' : 'Add Item',\n      inputs: [\n        {\n          name: 'name',\n          placeholder: \"Name\",\n          value: item ? item.name : null\n        },\n        {\n          name : 'quantity',\n          placeholder: \"Quantity\",\n          value: item ? item.quantity : null\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Save',\n          handler: (item) => {\n            console.log('Confirm Save', item);\n            if (index !== undefined) {\n              this.dataService.editItem(item, index);\n              /* item doesn't slide back when finished without this line*/\n              slidingItem.close();\n            }\n            else {\n              this.dataService.addItem(item);\n            }\n            \n            \n          }\n        }\n      ]\n    });\n\n    await alert.present();\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab1Page } from './tab1.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab1Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab1PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { Tab1PageRoutingModule } from './tab1-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    Tab1PageRoutingModule\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjEvdGFiMS5wYWdlLnNjc3MifQ== */\";","import { Component } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { GroceriesServiceService } from '../groceries-service.service';\nimport { InputDialogServiceService } from '../input-dialog-service.service';\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\nexport class Tab1Page {\n\n  title = \"Grocery App\"\n\n\n  constructor(public toastController: ToastController, public alertController: AlertController, public dataService: GroceriesServiceService, public inputDialogService: InputDialogServiceService) {\n\n  }\n\n  loadItems() {\n    return this.dataService.getItems();\n  }\n\n  async removeItem(item, index) {\n    console.log(\"Removing Item = \", item, index);\n    const toast = await this.toastController.create({\n      message: 'Removing ' + item.name + '...',\n      duration: 2000\n    });\n    toast.present();\n\n    this.dataService.removeItem(index);\n  }\n\n  /*slidingItem included to enable the item to slide back when done, name commes from HTML*/\n  async editItem(item, index, slidingItem) {\n    console.log(\"Edit Item = \", item, index);\n    const toast = await this.toastController.create({\n      message: 'Editing ' + item.name + '...',\n      duration: 2000\n    });\n    toast.present();\n\n    console.log(\"Editing Item\");\n    this.inputDialogService.showPrompt(item, index, slidingItem);\n\n  }\n  \n\n  async addItem() {\n    console.log(\"Adding Item\");\n    this.inputDialogService.showPrompt();\n  }\n\n  \n\n}\n"],"sourceRoot":"webpack:///"}